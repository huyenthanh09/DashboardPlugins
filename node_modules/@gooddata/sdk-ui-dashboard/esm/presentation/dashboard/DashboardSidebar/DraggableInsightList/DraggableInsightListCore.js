import { __assign } from "tslib";
// (C) 2022 GoodData Corporation
import React from "react";
import cx from "classnames";
import { insightIsLocked, insightTitle, insightUpdated, insightVisualizationUrl } from "@gooddata/sdk-model";
import { InsightListItem } from "@gooddata/sdk-ui-kit";
import { InsightList } from "../../../insightList";
import { DraggableInsightListItemWrapper } from "./DraggableInsightListItemWrapper";
export var DraggableInsightListCore = function (props) {
    return (React.createElement(InsightList, __assign({}, props, { renderItem: function (_a) {
            var insight = _a.item, width = _a.width, isFirst = _a.isFirst, isLast = _a.isLast;
            if (!insight) {
                return React.createElement(InsightListItem, { isLoading: true });
            }
            var visualizationUrl = insightVisualizationUrl(insight);
            var visualizationType = visualizationUrl === null || visualizationUrl === void 0 ? void 0 : visualizationUrl.split(":")[1];
            var classNames = cx("gd-visualizations-list-item-wrap", {
                "is-first": isFirst,
                "is-last": isLast,
            });
            return (React.createElement(DraggableInsightListItemWrapper, { title: insightTitle(insight), type: visualizationType, width: width, className: classNames, updated: insightUpdated(insight), isLocked: insightIsLocked(insight), insight: insight }));
        } })));
};
//# sourceMappingURL=DraggableInsightListCore.js.map