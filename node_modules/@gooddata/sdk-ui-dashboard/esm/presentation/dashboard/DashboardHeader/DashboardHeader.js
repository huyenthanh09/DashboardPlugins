import { __assign } from "tslib";
// (C) 2021-2022 GoodData Corporation
import React from "react";
import { ToastMessages } from "@gooddata/sdk-ui-kit";
import { ExportDialogProvider } from "../../dialogs";
import { TopBar, useTopBarProps } from "../../topBar";
import { SaveAsDialog, useSaveAsDialogProps } from "../../saveAs";
import { FilterBar, useFilterBarProps } from "../../filterBar";
import { ShareDialogDashboardHeader } from "./ShareDialogDashboardHeader";
import { ScheduledEmailDialogProvider } from "./ScheduledEmailDialogProvider";
import { DeleteDialog, useDeleteDialogProps } from "../../deleteDialog";
import { KpiDeleteDialog, useKpiDeleteDialogProps } from "../../kpiDeleteDialog";
import { CancelEditDialog, useCancelEditDialog } from "../../cancelEditDialog";
// these wrapper components are here to prevent the whole DashboardHeader from re-rendering whenever some
// of the sub-components' props change. by isolating the hooks more, we make sure only the really changed component re-renders.
var DeleteDialogWrapper = function () {
    var deleteDialogProps = useDeleteDialogProps();
    return React.createElement(DeleteDialog, __assign({}, deleteDialogProps));
};
var KpiDeleteDialogWrapper = function () {
    var kpiDeleteDialogProps = useKpiDeleteDialogProps();
    return React.createElement(KpiDeleteDialog, __assign({}, kpiDeleteDialogProps));
};
var SaveAsDialogWrapper = function () {
    var saveAsDialogProps = useSaveAsDialogProps();
    return React.createElement(SaveAsDialog, __assign({}, saveAsDialogProps));
};
var TopBarWrapper = function () {
    var topBarProps = useTopBarProps();
    return React.createElement(TopBar, __assign({}, topBarProps));
};
var FilterBarWrapper = function () {
    var filterBarProps = useFilterBarProps();
    return React.createElement(FilterBar, __assign({}, filterBarProps));
};
var CancelEditDialogWrapper = function () {
    var cancelEditDialogProps = useCancelEditDialog();
    return React.createElement(CancelEditDialog, __assign({}, cancelEditDialogProps));
};
// split the header parts of the dashboard so that changes to their state
// (e.g. opening email dialog) do not re-render the dashboard body
export var DashboardHeader = function () {
    return (React.createElement(React.Fragment, null,
        React.createElement(ToastMessages, null),
        React.createElement(ExportDialogProvider, null),
        React.createElement(ScheduledEmailDialogProvider, null),
        React.createElement(ShareDialogDashboardHeader, null),
        React.createElement(DeleteDialogWrapper, null),
        React.createElement(KpiDeleteDialogWrapper, null),
        React.createElement(SaveAsDialogWrapper, null),
        React.createElement(TopBarWrapper, null),
        React.createElement(FilterBarWrapper, null),
        React.createElement(CancelEditDialogWrapper, null)));
};
//# sourceMappingURL=DashboardHeader.js.map