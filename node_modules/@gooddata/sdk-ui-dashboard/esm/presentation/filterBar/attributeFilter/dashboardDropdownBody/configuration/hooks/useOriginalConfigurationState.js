// (C) 2022 GoodData Corporation
import { useMemo } from "react";
import invariant from "ts-invariant";
/**
 * @internal
 */
export function useOriginalConfigurationState(neighborFilters, filterElementsBy) {
    return useMemo(function () {
        return neighborFilters.map(function (neighborFilter) {
            var _a;
            var neighborFilterLocalId = neighborFilter.attributeFilter.localIdentifier;
            var neighborFilterDisplayForm = neighborFilter.attributeFilter.displayForm;
            var isSelected = (filterElementsBy === null || filterElementsBy === void 0 ? void 0 : filterElementsBy.some(function (by) { return by.filterLocalIdentifier === neighborFilterLocalId; })) || false;
            var overAttributes = (_a = filterElementsBy === null || filterElementsBy === void 0 ? void 0 : filterElementsBy.find(function (by) { return by.filterLocalIdentifier === neighborFilterLocalId; })) === null || _a === void 0 ? void 0 : _a.over.attributes;
            invariant(neighborFilterLocalId, "Cannot initialize the attribute filter configuration panel, neighbor filter has missing 'localIdentifier' property.");
            return {
                localIdentifier: neighborFilterLocalId,
                displayForm: neighborFilterDisplayForm,
                isSelected: isSelected,
                overAttributes: overAttributes,
                selectedConnectingAttribute: overAttributes === null || overAttributes === void 0 ? void 0 : overAttributes[0],
            };
        });
    }, [neighborFilters, filterElementsBy]);
}
//# sourceMappingURL=useOriginalConfigurationState.js.map