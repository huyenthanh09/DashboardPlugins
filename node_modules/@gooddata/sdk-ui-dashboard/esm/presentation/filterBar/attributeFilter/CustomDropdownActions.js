// (C) 2019-2022 GoodData Corporation
import React from "react";
import { Button } from "@gooddata/sdk-ui-kit";
import { AttributeFilterConfigurationButton, AttributeFilterDeleteButton } from "@gooddata/sdk-ui-filters";
import { selectIsDeleteFilterButtonEnabled, selectIsInEditMode, useDashboardSelector } from "../../../model";
/**
 * @internal
 */
export var CustomAttributeFilterDropdownActions = function (_a) {
    var isApplyDisabled = _a.isApplyDisabled, onApplyButtonClick = _a.onApplyButtonClick, onCancelButtonClick = _a.onCancelButtonClick, onConfigurationButtonClick = _a.onConfigurationButtonClick, onDeleteButtonClick = _a.onDeleteButtonClick, cancelText = _a.cancelText, applyText = _a.applyText;
    var isEditMode = useDashboardSelector(selectIsInEditMode);
    var isDeleteButtonEnabled = useDashboardSelector(selectIsDeleteFilterButtonEnabled);
    return (React.createElement("div", { className: "gd-attribute-filter-dropdown-actions__next" },
        React.createElement("div", { className: "gd-attribute-filter-dropdown-actions-left-content__next" },
            isEditMode && isDeleteButtonEnabled && (React.createElement(React.Fragment, null,
                React.createElement(AttributeFilterDeleteButton, { onDelete: onDeleteButtonClick }),
                React.createElement("div", { className: "gd-button-separator" }))),
            isEditMode && (React.createElement(AttributeFilterConfigurationButton, { onConfiguration: onConfigurationButtonClick }))),
        React.createElement("div", { className: "gd-attribute-filter-dropdown-actions-right-content__next" },
            React.createElement(Button, { className: "gd-attribute-filter-cancel-button__next gd-button-secondary gd-button-small cancel-button s-cancel", onClick: onCancelButtonClick, value: cancelText, title: cancelText }),
            React.createElement(Button, { disabled: isApplyDisabled, className: "gd-attribute-filter-apply-button__next gd-button-action gd-button-small s-apply", onClick: onApplyButtonClick, value: applyText, title: applyText }))));
};
/**
 * @internal
 */
export var CustomConfigureAttributeFilterDropdownActions = function (_a) {
    var isSaveDisabled = _a.isSaveDisabled, onSaveButtonClick = _a.onSaveButtonClick, onCancelButtonClick = _a.onCancelButtonClick, cancelText = _a.cancelText, saveText = _a.saveText;
    return (React.createElement("div", { className: "gd-attribute-filter-dropdown-actions__next" },
        React.createElement("div", { className: "gd-attribute-filter-dropdown-actions-left-content__next" }),
        React.createElement("div", { className: "gd-attribute-filter-dropdown-actions-right-content__next" },
            React.createElement(Button, { className: "gd-attribute-filter-cancel-button__next gd-button-secondary gd-button-small cancel-button s-cancel", onClick: onCancelButtonClick, value: cancelText, title: cancelText }),
            React.createElement(Button, { disabled: isSaveDisabled, className: "gd-attribute-filter-apply-button__next gd-button-action gd-button-small s-apply", onClick: onSaveButtonClick, value: saveText, title: saveText }))));
};
//# sourceMappingURL=CustomDropdownActions.js.map