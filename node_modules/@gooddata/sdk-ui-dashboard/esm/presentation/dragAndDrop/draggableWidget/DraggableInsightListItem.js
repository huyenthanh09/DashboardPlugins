import { __assign, __read } from "tslib";
// (C) 2022 GoodData Corporation
import React from "react";
import classNames from "classnames";
import { useDashboardSelector, selectIsInEditMode } from "../../../model";
import { useDashboardDrag } from "../useDashboardDrag";
import { useWidgetDragStartHandler } from "./useWidgetDragStartHandler";
import { useWidgetDragEndHandler } from "./useWidgetDragEndHandler";
/**
 * @internal
 */
export function DraggableInsightListItem(_a) {
    var ListItemComponent = _a.ListItemComponent, listItemComponentProps = _a.listItemComponentProps, insight = _a.insight;
    var isInEditMode = useDashboardSelector(selectIsInEditMode);
    var handleDragStart = useWidgetDragStartHandler();
    var handleDragEnd = useWidgetDragEndHandler();
    var _b = __read(useDashboardDrag({
        dragItem: {
            type: "insightListItem",
            insight: insight,
        },
        canDrag: isInEditMode,
        hideDefaultPreview: false,
        dragEnd: function (_, monitor) {
            handleDragEnd(monitor.didDrop());
        },
        dragStart: handleDragStart,
    }, [isInEditMode, insight, handleDragStart, handleDragEnd]), 2), isDragging = _b[0].isDragging, dragRef = _b[1];
    return (React.createElement("div", { className: classNames({ "is-dragging": isDragging }), ref: dragRef },
        React.createElement(ListItemComponent, __assign({}, listItemComponentProps))));
}
//# sourceMappingURL=DraggableInsightListItem.js.map