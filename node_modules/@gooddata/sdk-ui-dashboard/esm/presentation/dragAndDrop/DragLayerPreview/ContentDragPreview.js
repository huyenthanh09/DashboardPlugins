// (C) 2022 GoodData Corporation
import React, { useMemo } from "react";
import { useDashboardComponentsContext } from "../../dashboardContexts";
import { DEBUG_SHOW_DROP_ZONES } from "../debug";
function getItemStyles(initialOffset, currentOffset) {
    if (!initialOffset || !currentOffset) {
        return {
            display: "none",
        };
    }
    var x = currentOffset.x, y = currentOffset.y;
    var transform = "translate(" + x + "px, " + y + "px)";
    return {
        transform: transform,
        WebkitTransform: transform,
    };
}
export var ContentDragPreview = function (props) {
    var itemType = props.itemType, item = props.item, initialOffset = props.initialOffset, currentOffset = props.currentOffset;
    var AttributeFilterComponentSet = useDashboardComponentsContext().AttributeFilterComponentSet;
    var previewComponentsMap = useMemo(function () { return ({
        attributeFilter: AttributeFilterComponentSet.dragging.DraggingComponent,
    }); }, [AttributeFilterComponentSet.dragging.DraggingComponent]);
    var component = useMemo(function () {
        if (!(itemType in previewComponentsMap)) {
            if (DEBUG_SHOW_DROP_ZONES) {
                // eslint-disable-next-line no-console
                console.warn("DND: dnd item " + itemType + " not handled by CustomDragLayer");
            }
            return null;
        }
        var Component = previewComponentsMap[itemType];
        return React.createElement(Component, { itemType: itemType, item: item });
    }, [itemType, previewComponentsMap, item]);
    return (React.createElement("div", { className: "drag-preview", style: getItemStyles(initialOffset, currentOffset) }, component));
};
//# sourceMappingURL=ContentDragPreview.js.map