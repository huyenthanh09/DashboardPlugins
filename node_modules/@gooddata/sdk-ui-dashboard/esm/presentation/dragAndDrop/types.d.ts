/// <reference types="react" />
import { IDashboardAttributeFilter, IInsight } from "@gooddata/sdk-model";
/**
 * @internal
 */
export declare type DraggableContentItemType = "attributeFilter" | "attributeFilter-placeholder" | "insightListItem" | "insight-placeholder" | "kpi-placeholder" | "widget" | "custom";
/**
 * @internal
 */
export declare type DraggableInternalItemType = "internal-width-resizer" | "internal-height-resizer";
/**
 * @internal
 */
export declare function isDraggableInternalItemType(type: string): type is DraggableInternalItemType;
/**
 * @internal
 */
export declare type DraggableItemType = DraggableContentItemType | DraggableInternalItemType;
/**
 * @internal
 */
export declare type AttributeFilterDraggableItem = {
    type: "attributeFilter";
    filter: IDashboardAttributeFilter;
    filterIndex: number;
};
/**
 * @internal
 */
export declare function isAttributeFilterDraggableItem(item: any): item is AttributeFilterDraggableItem;
/**
 * @internal
 */
export declare type AttributeFilterPlaceholderDraggableItem = {
    type: "attributeFilter-placeholder";
};
/**
 * @internal
 */
export declare function isAttributeFilterPlaceholderDraggableItem(item: any): item is AttributeFilterPlaceholderDraggableItem;
/**
 * @internal
 */
export declare type KpiPlaceholderDraggableItem = {
    type: "kpi-placeholder";
};
/**
 * @internal
 */
export declare function isKpiPlaceholderDraggableItem(item: any): item is KpiPlaceholderDraggableItem;
/**
 * @internal
 */
export declare type InsightPlaceholderDraggableItem = {
    type: "insight-placeholder";
};
/**
 * @internal
 */
export declare function isInsightPlaceholderDraggableItem(item: any): item is InsightPlaceholderDraggableItem;
/**
 * @internal
 */
export declare type InsightDraggableListItem = {
    type: "insightListItem";
    insight: IInsight;
};
/**
 * @internal
 */
export declare function isInsightDraggableListItem(item: any): item is InsightDraggableListItem;
/**
 * @internal
 */
export declare type CustomDraggableItem = {
    type: "custom";
    [key: string]: any;
};
/**
 * @internal
 */
export declare type WidgetDraggableItem = {
    type: "widget";
    widget: never;
};
/**
 * @internal
 */
export declare type DraggableContentItem = AttributeFilterDraggableItem | AttributeFilterPlaceholderDraggableItem | InsightDraggableListItem | InsightPlaceholderDraggableItem | KpiPlaceholderDraggableItem | CustomDraggableItem | WidgetDraggableItem;
/**
 * @internal
 */
export declare type DraggableInternalItem = HeightResizerDragItem | WidthResizerDragItem;
/**
 * @internal
 */
export declare type DraggableItem = DraggableContentItem | DraggableInternalItem;
/**
 * @internal
 */
export declare type DraggableItemTypeMapping = DraggableItemComponentTypeMapping & DraggableItemInternalTypeMapping;
/**
 * @internal
 */
export declare type DraggableItemComponentTypeMapping = {
    attributeFilter: AttributeFilterDraggableItem;
    "attributeFilter-placeholder": AttributeFilterPlaceholderDraggableItem;
    insightListItem: InsightDraggableListItem;
    "insight-placeholder": InsightPlaceholderDraggableItem;
    "kpi-placeholder": KpiPlaceholderDraggableItem;
    custom: CustomDraggableItem;
    widget: WidgetDraggableItem;
};
/**
 * @internal
 */
export interface HeightResizerDragItem {
    type: "internal-height-resizer";
    sectionIndex: number;
    itemIndexes: number[];
    widgetHeights: number[];
    initialLayoutDimensions: DOMRect;
    minLimit: number;
    maxLimit: number;
}
/**
 * @internal
 */
export interface WidthResizerDragItem {
    type: "internal-width-resizer";
    sectionIndex: number;
    itemIndex: number;
    gridColumnWidth: number;
    gridColumnHeightInPx: number;
    currentWidth: number;
    initialLayoutDimensions: DOMRect;
    minLimit: number;
    maxLimit: number;
}
/**
 * @internal
 */
export declare type DraggableItemInternalTypeMapping = {
    "internal-width-resizer": WidthResizerDragItem;
    "internal-height-resizer": HeightResizerDragItem;
};
/**
 * @internal
 */
export declare type CustomDashboardInsightListItemComponentProps = {
    isLocked?: boolean;
    title?: string;
    updated?: string;
    type?: string;
    className?: string;
};
/**
 * @internal
 */
export declare type CustomDashboardInsightListItemComponent = React.ComponentType<CustomDashboardInsightListItemComponentProps>;
//# sourceMappingURL=types.d.ts.map