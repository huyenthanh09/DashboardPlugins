// (C) 2021-2022 GoodData Corporation
import { __read } from "tslib";
import { useCallback, useMemo, useState } from "react";
import { useIntl } from "react-intl";
import { selectExecutionResultByRef, useDashboardSelector } from "../../../../model";
import { isDataError } from "../../../../_staging/errors/errorPredicates";
import { useDashboardCustomizationsContext } from "../../../dashboardContexts";
import { getDefaultInsightMenuItems, getDefaultLegacyInsightMenuItems, } from "../../insightMenu";
export var useInsightMenu = function (config) {
    var insight = config.insight, widget = config.widget;
    var _a = __read(useState(false), 2), isMenuOpen = _a[0], setIsMenuOpen = _a[1];
    var closeMenu = useCallback(function () { return setIsMenuOpen(false); }, []);
    var openMenu = useCallback(function () { return setIsMenuOpen(true); }, []);
    var insightMenuItemsProvider = useDashboardCustomizationsContext().insightMenuItemsProvider;
    var defaultMenuItems = useDefaultMenuItems(config, insightMenuItemsProvider, setIsMenuOpen);
    var menuItems = useMemo(function () {
        return insightMenuItemsProvider
            ? insightMenuItemsProvider(insight, widget, defaultMenuItems, closeMenu, "view")
            : defaultMenuItems;
    }, [insightMenuItemsProvider, insight, widget, defaultMenuItems, closeMenu]);
    return { menuItems: menuItems, isMenuOpen: isMenuOpen, openMenu: openMenu, closeMenu: closeMenu };
};
function useDefaultMenuItems(config, insightMenuItemsProvider, setIsMenuOpen) {
    var exportCSVEnabled = config.exportCSVEnabled, exportXLSXEnabled = config.exportXLSXEnabled, scheduleExportEnabled = config.scheduleExportEnabled, onExportCSV = config.onExportCSV, onExportXLSX = config.onExportXLSX, onScheduleExport = config.onScheduleExport, isScheduleExportVisible = config.isScheduleExportVisible, widget = config.widget;
    var intl = useIntl();
    var execution = useDashboardSelector(selectExecutionResultByRef(widget.ref));
    return useMemo(function () {
        var defaultMenuItemsGetter = !insightMenuItemsProvider
            ? getDefaultLegacyInsightMenuItems
            : getDefaultInsightMenuItems;
        return defaultMenuItemsGetter(intl, {
            exportCSVDisabled: !exportCSVEnabled,
            exportXLSXDisabled: !exportXLSXEnabled,
            scheduleExportDisabled: !scheduleExportEnabled,
            onExportCSV: function () {
                setIsMenuOpen(false);
                onExportCSV();
            },
            onExportXLSX: function () {
                setIsMenuOpen(false);
                onExportXLSX();
            },
            onScheduleExport: function () {
                setIsMenuOpen(false);
                onScheduleExport();
            },
            isScheduleExportVisible: isScheduleExportVisible,
            isDataError: isDataError(execution === null || execution === void 0 ? void 0 : execution.error),
        });
    }, [
        insightMenuItemsProvider,
        execution,
        exportCSVEnabled,
        exportXLSXEnabled,
        scheduleExportEnabled,
        onExportCSV,
        onExportXLSX,
        onScheduleExport,
        isScheduleExportVisible,
        intl,
        setIsMenuOpen,
    ]);
}
//# sourceMappingURL=useInsightMenu.js.map