// (C) 2020-2022 GoodData Corporation
import React from "react";
import { Dropdown, DropdownList, SingleSelectListItem } from "@gooddata/sdk-ui-kit";
import { useIntl } from "react-intl";
import { ButtonWithIcon } from "./ButtonWithIcon";
import { DRILL_TARGET_TYPE } from "../../../drill/types";
var ITEM_HEIGHT = 25;
var DROPDOWN_BODY_WIDTH = 200;
var getTargetBySelection = function (selection, targets) {
    return targets.find(function (target) { return target.id === selection; });
};
var getIconClassNameBySelection = function (selection) {
    var _a;
    var icons = (_a = {},
        _a[DRILL_TARGET_TYPE.DRILL_TO_DASHBOARD] = "gd-icon-drill-to-dashboard",
        _a[DRILL_TARGET_TYPE.DRILL_TO_INSIGHT] = "gd-icon-drill-to-insight",
        _a[DRILL_TARGET_TYPE.DRILL_TO_URL] = "gd-icon-hyperlink-disabled",
        _a);
    return selection ? icons[selection] : undefined;
};
export var DrillTargetType = function (props) {
    var selection = props.selection, enabledDrillTargetTypeItems = props.enabledDrillTargetTypeItems;
    var intl = useIntl();
    var targetBySelection = getTargetBySelection(selection, enabledDrillTargetTypeItems);
    var buttonValue = targetBySelection
        ? targetBySelection.title
        : intl.formatMessage({ id: "configurationPanel.drillConfig.select" });
    var onSelect = function (target) {
        props.onSelect(target.id);
    };
    return (React.createElement(Dropdown, { closeOnParentScroll: true, closeOnMouseDrag: false, closeOnOutsideClick: true, alignPoints: [
            {
                align: "bl tl",
            },
            {
                align: "tl bl",
            },
        ], renderButton: function (_a) {
            var isOpen = _a.isOpen, toggleDropdown = _a.toggleDropdown;
            return (React.createElement(ButtonWithIcon, { className: "s-drill-config-panel-target-button", value: buttonValue, icon: getIconClassNameBySelection(selection), isOpen: isOpen, onClick: toggleDropdown }));
        }, renderBody: function (_a) {
            var closeDropdown = _a.closeDropdown;
            return (React.createElement(DropdownList, { width: DROPDOWN_BODY_WIDTH, itemHeight: ITEM_HEIGHT, items: enabledDrillTargetTypeItems, className: "gd-drill-config-panel-target s-drill-config-panel-target-type-open", renderItem: function (_a) {
                    var item = _a.item;
                    var isSelected = targetBySelection && targetBySelection.id === item.id;
                    var drillIconClassName = getIconClassNameBySelection(item.id);
                    return (React.createElement(SingleSelectListItem, { className: drillIconClassName, title: item.title, isSelected: isSelected, onClick: function () {
                            onSelect(item);
                            closeDropdown();
                        } }));
                } }));
        } }));
};
//# sourceMappingURL=DrillTargetType.js.map