// (C) 2022 GoodData Corporation
import { isDrillFromAttribute, isDrillToAttributeUrl, isDrillToCustomUrl, isDrillToDashboard, isDrillToInsight, isLocalIdRef, } from "@gooddata/sdk-model";
import { DRILL_TARGET_TYPE, isDrillToUrl, } from "../../../drill/types";
var localIdOrDie = function (ref) {
    if (isLocalIdRef(ref)) {
        return ref.localIdentifier;
    }
    throw new Error("invalid invariant");
};
var getTitleFromDrillableItemPushData = function (items, itemId) {
    var measureItems = items.measures || [];
    var measureResult = measureItems.find(function (measureResult) {
        return measureResult.measure.measureHeaderItem.localIdentifier === itemId;
    });
    if (!measureResult) {
        var attributeItems = items.attributes || [];
        var attributeResult = attributeItems.find(function (attributeItem) {
            return attributeItem.attribute.attributeHeader.localIdentifier === itemId;
        });
        return attributeResult ? attributeResult.attribute.attributeHeader.formOf.name : "";
    }
    return measureResult.measure.measureHeaderItem.name;
};
var getAttributes = function (supportedItemsForWidget, localIdentifier) {
    var measureItems = supportedItemsForWidget.measures || [];
    var supportedItems = measureItems.find(function (item) { return item.measure.measureHeaderItem.localIdentifier === localIdentifier; });
    return supportedItems ? supportedItems.attributes : [];
};
var buildUrlDrillTarget = function (drillData) {
    if (isDrillToCustomUrl(drillData)) {
        var customUrl = drillData.target.url;
        return {
            customUrl: customUrl,
        };
    }
    if (isDrillToAttributeUrl(drillData)) {
        var _a = drillData.target, insightAttributeDisplayForm = _a.displayForm, drillToAttributeDisplayForm = _a.hyperlinkDisplayForm;
        return {
            insightAttributeDisplayForm: insightAttributeDisplayForm,
            drillToAttributeDisplayForm: drillToAttributeDisplayForm,
        };
    }
    throw new Error("Unsupported URL drill type!");
};
var createInsightConfig = function (drillData, supportedItemsForWidget) {
    var _a, _b;
    var localIdentifier = isDrillFromAttribute(drillData.origin)
        ? localIdOrDie((_a = drillData.origin) === null || _a === void 0 ? void 0 : _a.attribute)
        : localIdOrDie((_b = drillData.origin) === null || _b === void 0 ? void 0 : _b.measure);
    return {
        type: isDrillFromAttribute(drillData.origin) ? "attribute" : "measure",
        localIdentifier: localIdentifier,
        title: getTitleFromDrillableItemPushData(supportedItemsForWidget, localIdentifier),
        attributes: getAttributes(supportedItemsForWidget, localIdentifier),
        drillTargetType: DRILL_TARGET_TYPE.DRILL_TO_INSIGHT,
        insightRef: drillData.target,
        complete: true,
    };
};
var createDashboardConfig = function (drillData, supportedItemsForWidget) {
    var _a, _b;
    var localIdentifier = isDrillFromAttribute(drillData.origin)
        ? localIdOrDie((_a = drillData.origin) === null || _a === void 0 ? void 0 : _a.attribute)
        : localIdOrDie((_b = drillData.origin) === null || _b === void 0 ? void 0 : _b.measure);
    return {
        type: isDrillFromAttribute(drillData.origin) ? "attribute" : "measure",
        localIdentifier: localIdentifier,
        title: getTitleFromDrillableItemPushData(supportedItemsForWidget, localIdentifier),
        attributes: getAttributes(supportedItemsForWidget, localIdentifier),
        drillTargetType: DRILL_TARGET_TYPE.DRILL_TO_DASHBOARD,
        dashboard: drillData.target,
        complete: true,
    };
};
var createUrlConfig = function (drillData, supportedItemsForWidget) {
    var _a, _b;
    var localIdentifier = isDrillFromAttribute(drillData.origin)
        ? localIdOrDie((_a = drillData.origin) === null || _a === void 0 ? void 0 : _a.attribute)
        : localIdOrDie((_b = drillData.origin) === null || _b === void 0 ? void 0 : _b.measure);
    return {
        type: isDrillFromAttribute(drillData.origin) ? "attribute" : "measure",
        localIdentifier: localIdentifier,
        title: getTitleFromDrillableItemPushData(supportedItemsForWidget, localIdentifier),
        attributes: getAttributes(supportedItemsForWidget, localIdentifier),
        drillTargetType: DRILL_TARGET_TYPE.DRILL_TO_URL,
        urlDrillTarget: buildUrlDrillTarget(drillData),
        complete: true,
    };
};
var createImplicitConfig = function () {
    return null;
};
var createConfig = function (drillData, supportedItemsForWidget) {
    if (isDrillToInsight(drillData)) {
        return createInsightConfig(drillData, supportedItemsForWidget);
    }
    if (isDrillToDashboard(drillData)) {
        return createDashboardConfig(drillData, supportedItemsForWidget);
    }
    if (isDrillToUrl(drillData)) {
        return createUrlConfig(drillData, supportedItemsForWidget);
    }
    return createImplicitConfig();
};
export var getMappedConfigForWidget = function (configForWidget, supportedItemsForWidget) {
    return configForWidget.map(function (item) { return createConfig(item, supportedItemsForWidget); });
};
//# sourceMappingURL=getMappedConfigForWidget.js.map