// (C) 2022 GoodData Corporation
import React from "react";
import { defineMessage, useIntl } from "react-intl";
import { Dropdown, DropdownButton, DropdownList, SingleSelectListItem, } from "@gooddata/sdk-ui-kit";
import { CONFIG_PANEL_INNER_WIDTH } from "../constants";
var alignPoints = [{ align: "bl tl" }, { align: "tl bl" }];
var messages = {
    lastYear: defineMessage({ id: "configurationPanel.comparisonTypeItems.samePeriodInPreviousYear" }),
    none: defineMessage({ id: "configurationPanel.comparisonTypeItems.noComparison" }),
    previousPeriod: defineMessage({ id: "configurationPanel.comparisonTypeItems.previousPeriod" }),
};
var placeholderMessage = defineMessage({ id: "configurationPanel.selectComparisonPlaceholder" });
var directionOrder = ["previousPeriod", "lastYear", "none"];
export var KpiComparisonTypeDropdown = function (props) {
    var comparisonType = props.comparisonType, onComparisonTypeChanged = props.onComparisonTypeChanged;
    var intl = useIntl();
    var buttonValue = comparisonType
        ? intl.formatMessage(messages[comparisonType])
        : intl.formatMessage(placeholderMessage);
    return (React.createElement(Dropdown, { alignPoints: alignPoints, closeOnParentScroll: true, closeOnMouseDrag: true, className: "s-compare_with_select", renderButton: function (_a) {
            var isOpen = _a.isOpen, toggleDropdown = _a.toggleDropdown;
            return (React.createElement(DropdownButton, { title: buttonValue, value: buttonValue, isOpen: isOpen, onClick: toggleDropdown }));
        }, renderBody: function (_a) {
            var closeDropdown = _a.closeDropdown;
            return (React.createElement(DropdownList, { className: "configuration-dropdown comparison-list", width: CONFIG_PANEL_INNER_WIDTH, items: directionOrder, renderItem: function (_a) {
                    var item = _a.item;
                    var selected = comparisonType === item;
                    return (React.createElement(SingleSelectListItem, { title: intl.formatMessage(messages[item]), isSelected: selected, onClick: function () {
                            onComparisonTypeChanged(item);
                            closeDropdown();
                        } }));
                } }));
        } }));
};
//# sourceMappingURL=KpiComparisonTypeDropdown.js.map