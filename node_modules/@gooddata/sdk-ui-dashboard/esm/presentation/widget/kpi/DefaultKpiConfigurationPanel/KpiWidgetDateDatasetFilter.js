// (C) 2022 GoodData Corporation
import React, { useCallback, useEffect } from "react";
import { widgetRef } from "@gooddata/sdk-model";
import { DateDatasetFilter } from "../../common";
import { enableKpiWidgetDateFilter, queryDateDatasetsForMeasure, selectIsWidgetLoadingAdditionalDataByWidgetRef, selectKpiDateDatasetAutoOpen, uiActions, useDashboardCommandProcessing, useDashboardDispatch, useDashboardQueryProcessing, useDashboardSelector, } from "../../../../model";
export var KpiWidgetDateDatasetFilter = function (props) {
    var widget = props.widget;
    var ref = widgetRef(widget);
    var _a = useDashboardQueryProcessing({
        queryCreator: queryDateDatasetsForMeasure,
    }), status = _a.status, queryDateDatasets = _a.run, result = _a.result;
    useEffect(function () {
        queryDateDatasets(widget.kpi.metric);
    }, [queryDateDatasets, widget.kpi.metric]);
    var isKpiDateDatasetAutoOpen = useDashboardSelector(selectKpiDateDatasetAutoOpen);
    var isLoadingAdditionalData = useDashboardSelector(selectIsWidgetLoadingAdditionalDataByWidgetRef(ref));
    var dispatch = useDashboardDispatch();
    var preselectDateDataset = useDashboardCommandProcessing({
        commandCreator: enableKpiWidgetDateFilter,
        successEvent: "GDC.DASH/EVT.KPI_WIDGET.FILTER_SETTINGS_CHANGED",
        errorEvent: "GDC.DASH/EVT.COMMAND.FAILED",
        onError: function () {
            dispatch(uiActions.setWidgetLoadingAdditionalDataStopped(ref));
            dispatch(uiActions.setKpiDateDatasetAutoOpen(false));
        },
        onSuccess: function () {
            dispatch(uiActions.setWidgetLoadingAdditionalDataStopped(ref));
        },
    }).run;
    // preselect the first dataset upon loading if the auto open was true
    useEffect(function () {
        if (isKpiDateDatasetAutoOpen) {
            preselectDateDataset(ref, "default");
        }
    }, [isKpiDateDatasetAutoOpen, dispatch, ref, preselectDateDataset]);
    var handleDateDatasetChanged = useCallback(function () {
        dispatch(uiActions.setKpiDateDatasetAutoOpen(false));
    }, [dispatch]);
    useEffect(function () {
        return function () {
            // once the config panel disappears set the auto-open flag to false so that editing existing KPIs
            // does not have it set to true
            dispatch(uiActions.setKpiDateDatasetAutoOpen(false));
        };
    }, [dispatch]);
    return (React.createElement("div", { className: "gd-kpi-date-dataset-dropdown" },
        React.createElement(DateDatasetFilter, { widget: widget, dateFilterCheckboxDisabled: false, isDatasetsLoading: status === "running" || status === "pending" || isLoadingAdditionalData, relatedDateDatasets: result === null || result === void 0 ? void 0 : result.dateDatasetsOrdered, shouldPickDateDataset: isKpiDateDatasetAutoOpen, isLoadingAdditionalData: isLoadingAdditionalData, onDateDatasetChanged: handleDateDatasetChanged })));
};
//# sourceMappingURL=KpiWidgetDateDatasetFilter.js.map