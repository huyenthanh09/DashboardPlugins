import { __read } from "tslib";
// (C) 2022 GoodData Corporation
import React, { useCallback, useEffect, useMemo, useState } from "react";
import { useWorkspaceStrict } from "@gooddata/sdk-ui";
import { safeSerializeObjRef } from "../../../../../_staging/metadata/safeSerializeObjRef";
import { MetricDropdown } from "./MetricDropdown";
export var KpiMetricDropdown = function (props) {
    var widget = props.widget, onMeasureChange = props.onMeasureChange;
    var workspace = useWorkspaceStrict();
    var measureRef = widget === null || widget === void 0 ? void 0 : widget.kpi.metric;
    var _a = __read(useState(measureRef), 2), selectedMeasure = _a[0], setSelectedMeasure = _a[1];
    var selectedItems = useMemo(function () { return (selectedMeasure ? [selectedMeasure] : []); }, [selectedMeasure]);
    var handleMeasureChanged = useCallback(function (measure) {
        onMeasureChange(measure.ref);
        setSelectedMeasure(measure.ref);
    }, [onMeasureChange]);
    useEffect(function () {
        setSelectedMeasure(measureRef);
    }, [safeSerializeObjRef(measureRef)]);
    return (React.createElement(MetricDropdown, { workspace: workspace, openOnInit: !measureRef, bodyClassName: "configuration-dropdown metrics-list s-metrics-list", selectedItems: selectedItems, onSelect: handleMeasureChanged }));
};
//# sourceMappingURL=KpiMetricDropdown.js.map