// (C) 2022 GoodData Corporation
import React, { useEffect, useRef } from "react";
import invariant from "ts-invariant";
import { isKpiPlaceholderWidget } from "../../../widgets";
import { eagerRemoveSectionItem, selectWidgetCoordinatesByRef, useDashboardDispatch, useDashboardSelector, useWidgetSelection, } from "../../../model";
import { DashboardItem, DashboardItemContent } from "../../presentationComponents";
import { ConfigurationBubble } from "../common";
import { KpiPlaceholderConfigurationPanel } from "./KpiPlaceholderConfigurationPanel";
/**
 * @internal
 */
export var DefaultDashboardKpiPlaceholderWidget = function (props) {
    var widget = props.widget, screen = props.screen;
    invariant(isKpiPlaceholderWidget(widget));
    var dispatch = useDashboardDispatch();
    var _a = useDashboardSelector(selectWidgetCoordinatesByRef(widget.ref)), itemIndex = _a.itemIndex, sectionIndex = _a.sectionIndex;
    var _b = useWidgetSelection(widget.ref), isSelectable = _b.isSelectable, isSelected = _b.isSelected;
    // keep information if this widget has been selected in the past
    var wasSelected = useRef(isSelected);
    useEffect(function () {
        if (isSelected) {
            wasSelected.current = true;
        }
    }, [isSelected]);
    useEffect(function () {
        // if the widget was selected in the past and is now not selected, it has just been unselected
        // -> remove its widget placeholder
        if (wasSelected.current && !isSelected) {
            dispatch(eagerRemoveSectionItem(sectionIndex, itemIndex));
        }
    }, [dispatch, isSelected, itemIndex, sectionIndex]);
    return (React.createElement(DashboardItem, { className: "is-selected is-placeholder is-edit-mode", screen: screen },
        React.createElement(DashboardItemContent, { isSelected: isSelected, isSelectable: isSelectable },
            React.createElement(ConfigurationBubble, null,
                React.createElement(KpiPlaceholderConfigurationPanel, { widget: widget })),
            React.createElement("div", { className: "kpi-placeholder select-measure" }))));
};
//# sourceMappingURL=DefaultDashboardKpiPlaceholderWidget.js.map