// (C) 2021-2022 GoodData Corporation
import { createSelector } from "@reduxjs/toolkit";
import { areObjRefsEqual } from "@gooddata/sdk-model";
import { selectWidgetsMap } from "../layout/layoutSelectors";
import { createMemoizedSelector } from "../_infra/selectors";
var selectSelf = createSelector(function (state) { return state; }, function (state) { return state.ui; });
/**
 * @alpha
 */
export var selectIsScheduleEmailDialogOpen = createSelector(selectSelf, function (state) { return state.scheduleEmailDialog.open; });
/**
 * @alpha
 */
export var selectScheduleEmailDialogDefaultAttachment = createSelector(selectSelf, function (state) { var _a; return (_a = state.scheduleEmailDialog.defaultAttachmentRef) !== null && _a !== void 0 ? _a : undefined; });
/**
 * @alpha
 */
export var selectIsScheduleEmailManagementDialogOpen = createSelector(selectSelf, function (state) { return state.scheduleEmailManagementDialog.open; });
/**
 * @alpha
 */
export var selectIsSaveAsDialogOpen = createSelector(selectSelf, function (state) { return state.saveAsDialog.open; });
/**
 * @alpha
 */
export var selectIsShareDialogOpen = createSelector(selectSelf, function (state) { return state.shareDialog.open; });
/**
 * @internal
 */
export var selectIsDeleteDialogOpen = createSelector(selectSelf, function (state) { return state.deleteDialog.open; });
/**
 * @internal
 */
export var selectIsKpiDeleteDialogOpen = createSelector(selectSelf, function (state) { return !!state.kpiDeleteDialog.widgetCoordinates; });
/**
 * @internal
 */
export var selectIsCancelEditModeDialogOpen = createSelector(selectSelf, function (state) { return !!state.cancelEditModeDialog.open; });
/**
 * @internal
 */
export var selectKpiDeleteDialogWidgetCoordinates = createSelector(selectSelf, function (state) { return state.kpiDeleteDialog.widgetCoordinates; });
/**
 * @alpha
 */
export var selectFilterBarExpanded = createSelector(selectSelf, function (state) { return state.filterBar.expanded; });
var selectHighlightedKpiWidgetRef = createSelector(selectSelf, function (state) { return state.kpiAlerts.highlightedWidgetRef; });
var selectOpenedKpiWidgetRef = createSelector(selectSelf, function (state) { var _a; return (_a = state.kpiAlerts.openedWidgetRef) !== null && _a !== void 0 ? _a : undefined; });
/**
 * @alpha
 */
export var selectIsKpiAlertOpenedByWidgetRef = createMemoizedSelector(function (ref) {
    return createSelector(selectWidgetsMap, selectOpenedKpiWidgetRef, function (widgets, openedWidgetRef) {
        if (!ref) {
            return false;
        }
        var openedWidget = openedWidgetRef && widgets.get(openedWidgetRef);
        if (!openedWidget) {
            return false;
        }
        var targetWidget = widgets.get(ref);
        if (!targetWidget) {
            return false;
        }
        return targetWidget.identifier === openedWidget.identifier;
    });
});
/**
 * @alpha
 */
export var selectIsKpiAlertHighlightedByWidgetRef = createMemoizedSelector(function (ref) {
    return createSelector(selectWidgetsMap, selectHighlightedKpiWidgetRef, function (widgets, highlightedWidgetRef) {
        if (!ref) {
            return false;
        }
        var highlightedWidget = highlightedWidgetRef && widgets.get(highlightedWidgetRef);
        if (!highlightedWidget) {
            return false;
        }
        var targetWidget = widgets.get(ref);
        if (!targetWidget) {
            return false;
        }
        return targetWidget.identifier === highlightedWidget.identifier;
    });
});
/**
 * @alpha
 */
export var selectMenuButtonItemsVisibility = createSelector(selectSelf, function (state) { var _a; return (_a = state.menuButton.itemsVisibility) !== null && _a !== void 0 ? _a : {}; });
/**
 * @internal
 */
export var selectSelectedWidgetRef = createSelector(selectSelf, function (state) { return state.selectedWidgetRef; });
/**
 * @internal
 */
export var selectConfigurationPanelOpened = createSelector(selectSelf, function (state) { return state.configurationPanelOpened; });
/**
 * @internal
 */
export var selectKpiDateDatasetAutoOpen = createSelector(selectSelf, function (state) { return state.kpiDateDatasetAutoOpen; });
/**
 * @internal
 */
export var selectInsightListLastUpdateRequested = createSelector(selectSelf, function (state) { return state.insightListLastUpdateRequested; });
var selectWidgetsLoadingAdditionalData = createSelector(selectSelf, function (state) { return state.widgetsLoadingAdditionalData; });
/**
 * @internal
 */
export var selectIsWidgetLoadingAdditionalDataByWidgetRef = createMemoizedSelector(function (ref) {
    return createSelector(selectWidgetsLoadingAdditionalData, function (widgetsLoading) {
        return widgetsLoading.some(function (loadingRef) { return areObjRefsEqual(loadingRef, ref); });
    });
});
/**
 * @alpha
 */
export var selectIsFilterAttributeSelectionOpen = createSelector(selectSelf, function (state) { return state.filterAttributeSelectionOpen; });
/**
 * @alpha
 */
export var selectSelectedFilterIndex = createSelector(selectSelf, function (state) { return state.selectedFilterIndex; });
/**
 * @internal
 */
export var selectIsDraggingWidget = createSelector(selectSelf, function (state) { return state.isDraggingWidget; });
/**
 * @internal
 */
export var selectActiveSectionIndex = createSelector(selectSelf, function (state) { return state.activeSectionIndex; });
//# sourceMappingURL=uiSelectors.js.map