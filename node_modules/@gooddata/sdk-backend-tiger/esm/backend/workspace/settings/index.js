import { __assign, __awaiter, __generator } from "tslib";
// (C) 2019-2022 GoodData Corporation
import { isUnexpectedError, } from "@gooddata/sdk-backend-spi";
import { TigerFeaturesService, pickContext } from "../../features";
import { DefaultUiSettings, DefaultUserSettings } from "../../uiSettings";
import { convertApiError } from "../../../utils/errorHandling";
import { unwrapSettingContent } from "../../../convertors/fromBackend/SettingsConverter";
var TigerWorkspaceSettings = /** @class */ (function () {
    function TigerWorkspaceSettings(authCall, workspace) {
        this.authCall = authCall;
        this.workspace = workspace;
    }
    TigerWorkspaceSettings.prototype.getSettings = function () {
        var _this = this;
        return this.authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
            var config;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, client.entities.getEntityWorkspaces({
                            id: this.workspace,
                            metaInclude: ["config"],
                        })];
                    case 1:
                        config = (_a.sent()).data.data.meta;
                        return [2 /*return*/, __assign(__assign({ workspace: this.workspace }, DefaultUiSettings), config === null || config === void 0 ? void 0 : config.config)];
                }
            });
        }); });
    };
    TigerWorkspaceSettings.prototype.getSettingsForCurrentUser = function () {
        return getSettingsForCurrentUser(this.authCall, this.workspace);
    };
    TigerWorkspaceSettings.prototype.setLocale = function (locale) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.setSetting("locale", { value: locale })];
            });
        });
    };
    TigerWorkspaceSettings.prototype.setSetting = function (id, content) {
        return __awaiter(this, void 0, void 0, function () {
            var error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 6]);
                        return [4 /*yield*/, this.getSetting(id)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.updateSetting(id, content)];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 6];
                    case 3:
                        error_1 = _a.sent();
                        if (!isUnexpectedError(error_1)) return [3 /*break*/, 5];
                        // if such settings is not defined
                        return [4 /*yield*/, this.createSetting(id, content)];
                    case 4:
                        // if such settings is not defined
                        _a.sent();
                        return [2 /*return*/];
                    case 5: throw convertApiError(error_1);
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    TigerWorkspaceSettings.prototype.getSetting = function (id) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (client) {
                        return client.entities.getEntityWorkspaceSettings({
                            workspaceId: _this.workspace,
                            objectId: id,
                        });
                    })];
            });
        });
    };
    TigerWorkspaceSettings.prototype.updateSetting = function (id, content) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, client.entities.updateEntityWorkspaceSettings({
                                    workspaceId: this.workspace,
                                    objectId: id,
                                    jsonApiWorkspaceSettingInDocument: {
                                        data: {
                                            type: "workspaceSetting",
                                            id: id,
                                            attributes: {
                                                content: content,
                                            },
                                        },
                                    },
                                })];
                        });
                    }); })];
            });
        });
    };
    TigerWorkspaceSettings.prototype.createSetting = function (id, content) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, client.entities.createEntityWorkspaceSettings({
                                    workspaceId: this.workspace,
                                    jsonApiWorkspaceSettingInDocument: {
                                        data: {
                                            type: "workspaceSetting",
                                            id: id,
                                            attributes: {
                                                content: content,
                                            },
                                        },
                                    },
                                })];
                        });
                    }); })];
            });
        });
    };
    return TigerWorkspaceSettings;
}());
export { TigerWorkspaceSettings };
/**
 * @internal
 */
function resolveSettings(authCall, workspace) {
    return __awaiter(this, void 0, void 0, function () {
        var data;
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
                        return __generator(this, function (_a) {
                            return [2 /*return*/, client.actions.workspaceResolveAllSettings({
                                    workspaceId: workspace,
                                })];
                        });
                    }); })];
                case 1:
                    data = (_a.sent()).data;
                    return [2 /*return*/, data.reduce(function (result, setting) {
                            var _a;
                            return __assign(__assign({}, result), (_a = {}, _a[setting.id] = unwrapSettingContent(setting.content), _a));
                        }, {})];
            }
        });
    });
}
/**
 * Expose this wrapper to other SPI implementations
 *
 * @internal
 */
export function getSettingsForCurrentUser(authCall, workspace) {
    var _this = this;
    return authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
        var _a, config, attributes, resolvedSettings, profile, features;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4 /*yield*/, client.entities.getEntityWorkspaces({
                        id: workspace,
                        metaInclude: ["config"],
                    })];
                case 1:
                    _a = (_b.sent()).data.data, config = _a.meta, attributes = _a.attributes;
                    return [4 /*yield*/, resolveSettings(authCall, workspace)];
                case 2:
                    resolvedSettings = _b.sent();
                    return [4 /*yield*/, client.profile.getCurrent()];
                case 3:
                    profile = _b.sent();
                    return [4 /*yield*/, new TigerFeaturesService(authCall).getFeatures(profile, pickContext(attributes))];
                case 4:
                    features = _b.sent();
                    return [2 /*return*/, __assign(__assign(__assign(__assign(__assign({}, DefaultUserSettings), { userId: profile.userId, workspace: workspace }), config === null || config === void 0 ? void 0 : config.config), features), resolvedSettings)];
            }
        });
    }); });
}
//# sourceMappingURL=index.js.map