import { __assign, __awaiter, __generator } from "tslib";
// (C) 2020-2022 GoodData Corporation
import { isUnexpectedError } from "@gooddata/sdk-backend-spi";
import { convertApiError } from "../../utils/errorHandling";
import { TigerFeaturesService } from "../features";
import { DefaultUserSettings } from "../uiSettings";
import { unwrapSettingContent } from "../../convertors/fromBackend/SettingsConverter";
var TigerUserSettingsService = /** @class */ (function () {
    function TigerUserSettingsService(authCall) {
        this.authCall = authCall;
    }
    TigerUserSettingsService.prototype.getSettings = function () {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
                        var profile, features, data, resolvedSettings;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, client.profile.getCurrent()];
                                case 1:
                                    profile = _a.sent();
                                    return [4 /*yield*/, new TigerFeaturesService(this.authCall).getFeatures(profile)];
                                case 2:
                                    features = _a.sent();
                                    return [4 /*yield*/, client.actions.resolveAllSettingsWithoutWorkspace()];
                                case 3:
                                    data = (_a.sent()).data;
                                    resolvedSettings = data.reduce(function (result, setting) {
                                        var _a;
                                        return (__assign(__assign({}, result), (_a = {}, _a[setting.id] = unwrapSettingContent(setting.content), _a)));
                                    }, {});
                                    return [2 /*return*/, __assign(__assign(__assign(__assign({}, DefaultUserSettings), features), resolvedSettings), { userId: profile.userId })];
                            }
                        });
                    }); })];
            });
        });
    };
    TigerUserSettingsService.prototype.setLocale = function (locale) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.setSetting("locale", { value: locale })];
            });
        });
    };
    TigerUserSettingsService.prototype.setSetting = function (id, content) {
        return __awaiter(this, void 0, void 0, function () {
            var error_1;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 3, , 6]);
                        return [4 /*yield*/, this.getSetting(id)];
                    case 1:
                        _a.sent();
                        return [4 /*yield*/, this.updateSetting(id, content)];
                    case 2:
                        _a.sent();
                        return [3 /*break*/, 6];
                    case 3:
                        error_1 = _a.sent();
                        if (!isUnexpectedError(error_1)) return [3 /*break*/, 5];
                        // if such settings is not defined
                        return [4 /*yield*/, this.createSetting(id, content)];
                    case 4:
                        // if such settings is not defined
                        _a.sent();
                        return [2 /*return*/];
                    case 5: throw convertApiError(error_1);
                    case 6: return [2 /*return*/];
                }
            });
        });
    };
    TigerUserSettingsService.prototype.getSetting = function (id) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
                        var profile;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, client.profile.getCurrent()];
                                case 1:
                                    profile = _a.sent();
                                    return [2 /*return*/, client.entities.getEntityUserSettings({
                                            userId: profile.userId,
                                            id: id,
                                        })];
                            }
                        });
                    }); })];
            });
        });
    };
    TigerUserSettingsService.prototype.updateSetting = function (id, content) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
                        var profile;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, client.profile.getCurrent()];
                                case 1:
                                    profile = _a.sent();
                                    return [2 /*return*/, client.entities.updateEntityUserSettings({
                                            id: id,
                                            userId: profile.userId,
                                            jsonApiUserSettingInDocument: {
                                                data: {
                                                    type: "userSetting",
                                                    id: id,
                                                    attributes: {
                                                        content: content,
                                                    },
                                                },
                                            },
                                        })];
                            }
                        });
                    }); })];
            });
        });
    };
    TigerUserSettingsService.prototype.createSetting = function (id, content) {
        return __awaiter(this, void 0, void 0, function () {
            var _this = this;
            return __generator(this, function (_a) {
                return [2 /*return*/, this.authCall(function (client) { return __awaiter(_this, void 0, void 0, function () {
                        var profile;
                        return __generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, client.profile.getCurrent()];
                                case 1:
                                    profile = _a.sent();
                                    return [2 /*return*/, client.entities.createEntityUserSettings({
                                            userId: profile.userId,
                                            jsonApiUserSettingInDocument: {
                                                data: {
                                                    type: "userSetting",
                                                    id: id,
                                                    attributes: {
                                                        content: content,
                                                    },
                                                },
                                            },
                                        })];
                            }
                        });
                    }); })];
            });
        });
    };
    return TigerUserSettingsService;
}());
export { TigerUserSettingsService };
//# sourceMappingURL=settings.js.map