// (C) 2022 GoodData Corporation
/**
 * When stacking the overlays, next overlay is going to have an z-index higher by 10.
 */
var Z_INDEX_STEP = 10;
/**
 * Overlay stacking controller.
 *
 * @internal
 */
var OverlayController = /** @class */ (function () {
    function OverlayController() {
        this.currentCount = 0;
        this.initialZIndex = 5001;
        this.overlays = new Map();
    }
    OverlayController.getInstance = function () {
        if (!this.instance) {
            this.instance = new OverlayController();
        }
        return this.instance;
    };
    /**
     * Adds the overlay record to the map.
     *
     * @param uuid - given overlay uuid.
     */
    OverlayController.prototype.addOverlay = function (uuid) {
        this.overlays.set(uuid, ++this.currentCount);
    };
    /**
     * Getter for z-index of the given overlay.
     *
     * @remarks
     * If the entry in the overlays map is not available, the initial z-index of 5001 is used.
     *
     * @param uuid - unique identifier of the overlay.
     * @returns
     */
    OverlayController.prototype.getZIndex = function (uuid) {
        return this.initialZIndex + (this.overlays.get(uuid) || 0) * Z_INDEX_STEP;
    };
    /**
     * Removes given overlay from the overlays map.
     *
     * @param uuid - unique identifier of the overlay
     */
    OverlayController.prototype.removeOverlay = function (uuid) {
        this.overlays.delete(uuid);
        this.currentCount--;
    };
    return OverlayController;
}());
export { OverlayController };
//# sourceMappingURL=OverlayController.js.map